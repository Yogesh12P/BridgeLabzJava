/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M26
 * Generated at: 2017-11-09 06:47:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Registration_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<title>Registration</title>\n");
      out.write("<link rel=\"stylesheet\" href=\"css/bootstrap.min.css\">\n");
      out.write("<link rel=\"stylesheet\" href=\"css/datepicker.css\">\n");
      out.write("<link rel=\"stylesheet\" href=\"css/registration-form-with-bootstarp.css\">\n");
      out.write("<link rel=\"stylesheet\" href=\"registrationStyle.css\">\n");
      out.write("<script src=\"registerJS.js\"></script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\t<div class=\"container\">\n");
      out.write("\t\t\t<div class=\"page-header\">\n");
      out.write("\t\t\t\t<h1 align=\"center\">Registration Form</h1>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t<div class=\"row\">\n");
      out.write("\t\t\n");
      out.write("\t\t\t<form class=\"form-horizontal has-feedback\" role=\"form\" method=\"post\" action=\"reg\">\n");
      out.write(" \t\t\t<p style=\"color:red;\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${Regerror}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</p>\n");
      out.write(" \t\t\t<label><b>NAME</b></label>\n");
      out.write("\t\t\t<div class=\"row\">\n");
      out.write("\t\t\t\t<div class=\"col-lg-6\">\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t<input id=\"rFirst_name\" class=\"form-control input-group-lg reg_name\" type=\"text\" name=\"rFirst_name\" title=\"Enter first name\" placeholder=\"First name\">\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t<input id=\"rLast_name\" class=\"form-control input-group-lg reg_name\" style=\"padding-left: 5px\" type=\"text\" name=\"rLast_name\" title=\"Enter first name\" placeholder=\"Last name\">\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t<label><b>Enter Email</b></label>\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t<div class=\"row\">\n");
      out.write("\t\t\t\t<div class=\"col-lg-12\">\n");
      out.write("\t\t\t\t\t<input type=\"email\"\n");
      out.write("\t\t\t\t\tid=\"rEmail\" \n");
      out.write("      \t\t\t\tclass=\"form-control\"\n");
      out.write("      \t\t\t\tname=\"rEmail\" \n");
      out.write("      \t\t \t\tplaceholder=\"Email Address\"\n");
      out.write("      \t\t \t\tonsubmit=\"emailValid()\"\n");
      out.write("      \t\t \t\ttitle=\"Username should only contain lowercase letters. e.g. john\"\n");
      out.write("      \t\t \t\t><br>\n");
      out.write("      \t\t \t\t<i class=\"glyphicon glyphicon-user form-control-feedback\"></i>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t<div id=\"errormail\"></div>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t<label><b>Enter Password</b></label>\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t<div class=\"row\">\n");
      out.write("\t\t\t\t<div class=\"col-lg-12\">\n");
      out.write("\t\t\t\t\t<input type=\"password\" \n");
      out.write("      \t\t\t\tid=\"rPassword\"\n");
      out.write("      \t\t\t\tclass=\"form-control\"\n");
      out.write("      \t\t\t\tname=\"rPassword\" \n");
      out.write("      \t\t \t\tplaceholder=\"*****\"\n");
      out.write("      \t\t \t\ttitle=\"please enter valid password\"\n");
      out.write("      \t\t \t\tonsubmit=\"passwordValid()\"\n");
      out.write("      \t\t \t\t><br>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t<div id=\"errorpass1\"></div>\n");
      out.write("\t\t\t\t<div id=\"errorpass2\"></div>\n");
      out.write("\t\t\t\t<div id=\"errorpass3\"></div>\n");
      out.write("\t\t\t\t<div id=\"errorpass4\"></div>\n");
      out.write("\t\t\t\t<div id=\"errorpass5\"></div>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t<label><b>Re-Enter password</b></label>\n");
      out.write("\t\t\t<div class=\"row\">\n");
      out.write("\t\t\t\t<div class=\"col-lg-12\">\n");
      out.write("\t\t\t\t\t<input type=\"password\" \n");
      out.write("      \t\t\t\tid=\"rEPassword\"\n");
      out.write("      \t\t\t\tclass=\"form-control\"\n");
      out.write("      \t\t\t\tname=\"rEPassword\" \n");
      out.write("      \t\t \t\tplaceholder=\"*****\"\n");
      out.write("      \t\t \t\ttitle=\"please enter valid password\"\n");
      out.write("      \t\t \t\tonsubmit=\"ConfirmRePassword()\"\n");
      out.write("      \t\t \t\t><br>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t<div id=\"errorpass\"></div>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t<label><b>Enter Mobile No</b></label>\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t<div class=\"row\">\n");
      out.write("\t\t\t\t<div class=\"col-lg-12\">\n");
      out.write("\t\t\t\t\t<input type=\"number\" \n");
      out.write("      \t\t\t\tid=\"rMno\"\n");
      out.write("      \t\t\t\tclass=\"form-control\"\n");
      out.write("      \t\t\t\tname=\"rMno\" \n");
      out.write("      \t\t \t\tplaceholder=\"Mobile_no\"\n");
      out.write("      \t\t \t\ttitle=\"please enter valid password\"\n");
      out.write("      \t\t \t\tonsubmit=\"validMobileNo()\"\n");
      out.write("      \t\t \t\t><br>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t<div class=\"errorMno\"></div>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t<button type=\"submit\" class=\"btn btn-default\">Submit</button>\n");
      out.write("\t\t\t<button type=\"reset\" class=\"btn btn-default\">Reset</button>\t\t\t\n");
      out.write("\t\t</form>\n");
      out.write(" \n");
      out.write("\t</div><!-- end for class \"row\" -->\n");
      out.write("\t</div><!-- end for class \"container\" -->\n");
      out.write("\t\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
